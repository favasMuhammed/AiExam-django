# Generated by Django 5.1.6 on 2025-03-25 09:05

import django.core.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MalpracticeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Links to ExamAttempt.attempt_uuid')),
                ('type', models.CharField(choices=[('tab_switch', 'Tab Switch'), ('context_menu', 'Context Menu'), ('shortcut', 'Keyboard Shortcut'), ('devtools', 'Developer Tools'), ('fullscreen_exit', 'Fullscreen Exit'), ('save_error', 'Save Error')], help_text='The type of malpractice detected.', max_length=50)),
                ('message', models.TextField(blank=True, default='No details provided', help_text='Description of the malpractice event.')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Time the malpractice was logged.')),
                ('severity', models.IntegerField(default=1, help_text='Severity level: 1=Low, 2=Medium, 3=High', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address from which the malpractice was logged, if available.', null=True)),
                ('is_reviewed', models.BooleanField(default=False, help_text='Indicates if a teacher has reviewed this malpractice.')),
            ],
            options={
                'verbose_name': 'Malpractice Log',
                'verbose_name_plural': 'Malpractice Logs',
                'ordering': ['timestamp'],
            },
        ),
    ]
